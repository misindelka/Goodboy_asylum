[{"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/index.tsx":"1","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/reportWebVitals.ts":"2","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/App.tsx":"3","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/store.tsx":"4","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/index.tsx":"5","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/langReducer.ts":"6","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/types.ts":"7","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/i18n/index.ts":"8","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/router.js":"9","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/header.tsx":"10","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/theme.ts":"11","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/globalStyle.ts":"12","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/headerStyled.ts":"13","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/generalStyled.ts":"14","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/footer.tsx":"15","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/footerStyled.ts":"16","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/chooseStyled.ts":"17","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/userDataStyled.ts":"18","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/submitStyled.ts":"19","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/sheltersReducer.ts":"20","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/actions/sheltersActions.ts":"21","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/actions/formAction.ts":"22","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/formReducer.ts":"23","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/chooseSupport.tsx":"24","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/submitSupport.tsx":"25","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/userDataForm.tsx":"26"},{"size":602,"mtime":1624208252938,"results":"27","hashOfConfig":"28"},{"size":473,"mtime":1624114374336,"results":"29","hashOfConfig":"30"},{"size":902,"mtime":1624460166344,"results":"31","hashOfConfig":"28"},{"size":295,"mtime":1624118653571,"results":"32","hashOfConfig":"28"},{"size":416,"mtime":1624439919540,"results":"33","hashOfConfig":"28"},{"size":508,"mtime":1624349066960,"results":"34","hashOfConfig":"28"},{"size":849,"mtime":1624509993242,"results":"35","hashOfConfig":"28"},{"size":436,"mtime":1624349066950,"results":"36","hashOfConfig":"28"},{"size":487,"mtime":1624517586824,"results":"37","hashOfConfig":"28"},{"size":907,"mtime":1624349066950,"results":"38","hashOfConfig":"28"},{"size":1039,"mtime":1624518462758,"results":"39","hashOfConfig":"28"},{"size":267,"mtime":1624532673220,"results":"40","hashOfConfig":"28"},{"size":1135,"mtime":1624349066965,"results":"41","hashOfConfig":"28"},{"size":581,"mtime":1624533338368,"results":"42","hashOfConfig":"28"},{"size":1552,"mtime":1624349066949,"results":"43","hashOfConfig":"28"},{"size":1847,"mtime":1624349066964,"results":"44","hashOfConfig":"28"},{"size":4759,"mtime":1624533247875,"results":"45","hashOfConfig":"28"},{"size":898,"mtime":1624349066967,"results":"46","hashOfConfig":"28"},{"size":448,"mtime":1624520504605,"results":"47","hashOfConfig":"28"},{"size":368,"mtime":1624450482864,"results":"48","hashOfConfig":"28"},{"size":401,"mtime":1624352338294,"results":"49","hashOfConfig":"28"},{"size":212,"mtime":1624460455551,"results":"50","hashOfConfig":"28"},{"size":424,"mtime":1624452467136,"results":"51","hashOfConfig":"28"},{"size":8340,"mtime":1624535261220,"results":"52","hashOfConfig":"28"},{"size":4094,"mtime":1624531477640,"results":"53","hashOfConfig":"28"},{"size":4935,"mtime":1624518708176,"results":"54","hashOfConfig":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"166ovza",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"vorgon",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"57"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"57"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"57"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"57"},"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/index.tsx",[],["118","119","120","121","122"],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/reportWebVitals.ts",[],["123","124","125","126","127"],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/App.tsx",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/store.tsx",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/index.tsx",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/langReducer.ts",["128"],"import { SET_LANGUAGE, LangAction, LangState } from '../types';\n\nconst localSorageLang = localStorage.getItem('language');\n\nconst initialState: LangState = {\n    language: localSorageLang || 'SK',\n};\n\nconst langReducer = (state = initialState, action: LangAction) => {\n    switch (action.type) {\n        case SET_LANGUAGE:\n            return {\n                ...state,\n                language: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default langReducer;\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/types.ts",["129"],"export const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const GET_SHELTERS = 'GET_SHELTERS';\nexport const ADD_FORM_DATA = 'ADD_FORM_DATA';\n\nexport interface LangState {\n    language: string;\n}\n\nexport interface IShelters {\n    [x: string]: any;\n    id: number;\n    name: string;\n}\n\nexport interface IFormData {\n    shelterOption: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone: string;\n    value: string;\n    shelterID: number;\n}\ninterface GetSheltersAction {\n    type: typeof GET_SHELTERS;\n    payload: IShelters;\n}\n\ninterface SetLanguageAction {\n    type: typeof SET_LANGUAGE;\n    payload: string;\n}\n\ninterface SetFormData {\n    type: typeof ADD_FORM_DATA;\n    payload: IFormData;\n}\n\nexport type LangAction = SetLanguageAction;\nexport type ShelterAction = GetSheltersAction;\nexport type FormDataAction = SetFormData;\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/i18n/index.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/router.js",[],["130","131","132","133","134"],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/header.tsx",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/theme.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/globalStyle.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/headerStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/generalStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/footer.tsx",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/footerStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/chooseStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/userDataStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/styles/components/submitStyled.ts",[],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/sheltersReducer.ts",["135"],"import { GET_SHELTERS, ShelterAction } from '../types';\n\nconst initialState = {};\n\nexport const sheltersReducer = (state = initialState, action: ShelterAction) => {\n    switch (action.type) {\n        case GET_SHELTERS:\n            return {\n                ...state,\n                ...action.payload,\n            };\n        default:\n            return state;\n    }\n};\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/actions/sheltersActions.ts",["136","137"],"import axios from 'axios';\nimport { GET_SHELTERS } from '../types';\n\nexport const getShelters =\n    () => async (dispatch: (arg0: { type: string; payload: any }) => void) => {\n        await axios\n            .get('https://frontend-assignment-api.goodrequest.com/api/v1/shelters')\n            .then((res) => {\n                dispatch({ type: GET_SHELTERS, payload: res.data });\n            });\n    };\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/actions/formAction.ts",["138"],"import { ADD_FORM_DATA, IFormData } from '../types';\n\nexport const addFormData = (data: IFormData) => ({\n    type: ADD_FORM_DATA,\n    payload: data,\n});\n\n// export const postFormData = (data: IFormData) => ({});\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/redux/reducers/formReducer.ts",["139"],"import { ADD_FORM_DATA, FormDataAction } from '../types';\n\nconst initialState = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    value: '',\n    shelterID: 0,\n};\n\nexport const formReducer = (state = initialState, action: FormDataAction) => {\n    switch (action.type) {\n        case ADD_FORM_DATA:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/chooseSupport.tsx",["140","141"],"/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/submitSupport.tsx",["142"],"import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { translate } from '../i18n';\nimport { RootState } from '../redux/index';\n\nimport { Container } from '../styles/components/generalStyled';\nimport {\n    Wrapper,\n    Image,\n    Title,\n    TitleContainer,\n    ValueTitle as FormTitle,\n    ContentContainer,\n    LabelContainer,\n    LinkTo,\n} from '../styles/components/chooseStyled';\nimport { StyledCheckbox, CheckedWrapper, Label } from '../styles/components/submitStyled';\n\nimport DogBg from '../assets/pageBg.png';\nimport { IShelters } from '../redux/types';\n\nexport const SubmitSupport: React.FC = () => {\n    const { language } = useSelector((state: RootState) => state.lang);\n    const formData = useSelector((state: RootState) => state.formData);\n    const { shelters } = useSelector((state: IShelters) => state.shelters);\n    const [checked, setChecked] = React.useState(false);\n\n    const selectedShelter = shelters?.filter((i: IShelters) => i.id === formData.shelterID);\n\n    return (\n        <>\n            <Container>\n                <Link to=\"./Choose\" style={{ margin: '10px' }}>\n                    Choose\n                </Link>\n                <Link to=\"./UserData\" style={{ margin: '10px' }}>\n                    UserData\n                </Link>\n                <Link to=\"./Submit\" style={{ margin: '10px' }}>\n                    submit\n                </Link>\n            </Container>\n            <Wrapper>\n                <ContentContainer>\n                    <TitleContainer>\n                        <Title>{translate('submitTitle', language)}</Title>\n                    </TitleContainer>\n\n                    <LabelContainer>\n                        <FormTitle>{translate('submitSupportShelterLabel', language)}</FormTitle>\n                    </LabelContainer>\n                    {formData.shelterID !== 0 ? (\n                        selectedShelter.map((i: any) => <Label key={i.id}>{i.name}</Label>)\n                    ) : (\n                        <Label>{translate('cooseSupportTrust', language)}</Label>\n                    )}\n\n                    <LabelContainer>\n                        <FormTitle>{translate('submitAmoutLabel', language)}</FormTitle>\n                    </LabelContainer>\n                    <Label>{formData.value} €</Label>\n\n                    <LabelContainer>\n                        <FormTitle>{translate('submitNameSurnameLabel', language)}</FormTitle>\n                    </LabelContainer>\n                    <Label>\n                        {formData.firstName} {formData.lastName}\n                    </Label>\n\n                    <LabelContainer>\n                        <FormTitle>{translate('submitEmailLabel', language)}</FormTitle>\n                    </LabelContainer>\n                    <Label>{formData.email}</Label>\n\n                    <LabelContainer>\n                        <FormTitle>{translate('submitPhoneNumber', language)}</FormTitle>\n                    </LabelContainer>\n                    <Label>{formData.phone}</Label>\n\n                    <CheckedWrapper>\n                        <StyledCheckbox\n                            type=\"checkbox\"\n                            color=\"rgba(47,47,47,0.8)\"\n                            defaultChecked={checked}\n                            onChange={() => setChecked(!checked)}\n                        />\n                        <Label>{translate('submitTitle', language)}</Label>\n                    </CheckedWrapper>\n\n                    <LabelContainer>\n                        <LinkTo back to=\"./UserDataForm\">\n                            {translate('backButton', language)}\n                        </LinkTo>\n                        <LinkTo back={false} to=\"./ChooseSupport\">\n                            {translate('submitButton', language)}\n                        </LinkTo>\n                    </LabelContainer>\n                </ContentContainer>\n\n                <Container>\n                    <Image src={DogBg} />\n                </Container>\n            </Wrapper>\n        </>\n    );\n};\n","/Users/misindelka.dev/Desktop/DEV/GOOD_REQUEST/ASSIGMENT/goodboy-app/src/pages/userDataForm.tsx",["143","144"],"/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-unused-vars */\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { translate } from '../i18n';\nimport { RootState } from '../redux/index';\nimport { addFormData } from '../redux/actions/formAction';\n\nimport { Container } from '../styles/components/generalStyled';\nimport {\n    Wrapper,\n    Image,\n    Title,\n    TitleContainer,\n    ContentContainer,\n    ValueTitle as FormTitle,\n    LabelContainer,\n    LinkTo,\n} from '../styles/components/chooseStyled';\nimport { StyledInput, FormWrapper, InputName } from '../styles/components/userDataStyled';\nimport DogBg from '../assets/pageBg.png';\n\nconst initialFormData = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n};\n\nexport const UserDataForm: React.FC = () => {\n    const { language } = useSelector((state: RootState) => state.lang);\n    const [formData, setForm] = React.useState(initialFormData);\n\n    const dispatch = useDispatch();\n\n    const submitForm = (data: any) => {\n        dispatch(addFormData(data));\n    };\n\n    const handleInput = (e: any) => {\n        const { name, value } = e.target;\n        setForm({ ...formData, [name]: value });\n    };\n\n    return (\n        <>\n            <Container>\n                <Link to=\"./Choose\" style={{ margin: '10px' }}>\n                    Choose\n                </Link>\n                <Link to=\"./UserData\" style={{ margin: '10px' }}>\n                    UserData\n                </Link>\n                <Link to=\"./Submit\" style={{ margin: '10px' }}>\n                    submit\n                </Link>\n            </Container>\n            <Wrapper>\n                <ContentContainer>\n                    <TitleContainer>\n                        <Title>{translate('userDataTitle', language)}</Title>\n                    </TitleContainer>\n\n                    <LabelContainer>\n                        <FormTitle>{translate('userDataFormTitle', language)}</FormTitle>\n                    </LabelContainer>\n\n                    <FormWrapper>\n                        <InputName>{translate('userName', language)}</InputName>\n                        <StyledInput\n                            type=\"text\"\n                            minLength={2}\n                            maxLength={20}\n                            placeholder={translate('userNamePlaceholder', language)}\n                            name=\"firstName\"\n                            value={formData.firstName}\n                            onChange={handleInput}\n                        />\n                    </FormWrapper>\n                    <FormWrapper>\n                        <InputName>{translate('userSurname', language)}</InputName>\n                        <StyledInput\n                            type=\"text\"\n                            minLength={2}\n                            maxLength={30}\n                            placeholder={translate('userSurnamePlaceholder', language)}\n                            name=\"lastName\"\n                            value={formData.lastName}\n                            onChange={handleInput}\n                        />\n                    </FormWrapper>\n\n                    <FormWrapper>\n                        <InputName>{translate('userEmail', language)}</InputName>\n                        <StyledInput\n                            type=\"email\"\n                            placeholder={translate('userEmailPlaceholder', language)}\n                            name=\"email\"\n                            value={formData.email}\n                            onChange={handleInput}\n                        />\n                    </FormWrapper>\n\n                    <FormWrapper>\n                        <InputName>{translate('userPhoneNo', language)}</InputName>\n                        <StyledInput\n                            type=\"tel\"\n                            placeholder={translate('userPhoneSk', language)}\n                            name=\"phone\"\n                            value={formData.phone}\n                            onChange={handleInput}\n                        />\n                    </FormWrapper>\n\n                    <LabelContainer>\n                        <LinkTo back to=\"./ChooseSupport\">\n                            {translate('backButton', language)}\n                        </LinkTo>\n                        <LinkTo\n                            back={false}\n                            to=\"./SubmitSupport\"\n                            onClick={() => submitForm(formData)}\n                        >\n                            {translate('continueButton', language)}\n                        </LinkTo>\n                    </LabelContainer>\n                </ContentContainer>\n\n                <Container>\n                    <Image src={DogBg} />\n                </Container>\n            </Wrapper>\n        </>\n    );\n};\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"145","replacedBy":"155"},{"ruleId":"147","replacedBy":"156"},{"ruleId":"149","replacedBy":"157"},{"ruleId":"151","replacedBy":"158"},{"ruleId":"153","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":9,"column":21,"nodeType":"162","messageId":"163","endLine":9,"endColumn":66},{"ruleId":"164","severity":1,"message":"165","line":10,"column":18,"nodeType":"166","messageId":"167","endLine":10,"endColumn":21,"suggestions":"168"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"160","severity":1,"message":"161","line":5,"column":32,"nodeType":"162","messageId":"163","endLine":5,"endColumn":80},{"ruleId":"160","severity":1,"message":"161","line":5,"column":11,"nodeType":"162","messageId":"163","endLine":5,"endColumn":78},{"ruleId":"164","severity":1,"message":"165","line":5,"column":60,"nodeType":"166","messageId":"167","endLine":5,"endColumn":63,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":28,"nodeType":"162","messageId":"163","endLine":3,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":12,"column":28,"nodeType":"162","messageId":"163","endLine":12,"endColumn":77},{"ruleId":"164","severity":1,"message":"165","line":126,"column":51,"nodeType":"166","messageId":"167","endLine":126,"endColumn":54,"suggestions":"170"},{"ruleId":"164","severity":1,"message":"165","line":192,"column":47,"nodeType":"166","messageId":"167","endLine":192,"endColumn":50,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"165","line":54,"column":49,"nodeType":"166","messageId":"167","endLine":54,"endColumn":52,"suggestions":"172"},{"ruleId":"164","severity":1,"message":"165","line":37,"column":31,"nodeType":"166","messageId":"167","endLine":37,"endColumn":34,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"165","line":41,"column":29,"nodeType":"166","messageId":"167","endLine":41,"endColumn":32,"suggestions":"174"},"lines-around-directive",["175"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["175"],[],[],[],[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["176","177"],["178","179"],["180","181"],["182","183"],["184","185"],["186","187"],["188","189"],"padding-line-between-statements",{"messageId":"190","fix":"191","desc":"192"},{"messageId":"193","fix":"194","desc":"195"},{"messageId":"190","fix":"196","desc":"192"},{"messageId":"193","fix":"197","desc":"195"},{"messageId":"190","fix":"198","desc":"192"},{"messageId":"193","fix":"199","desc":"195"},{"messageId":"190","fix":"200","desc":"192"},{"messageId":"193","fix":"201","desc":"195"},{"messageId":"190","fix":"202","desc":"192"},{"messageId":"193","fix":"203","desc":"195"},{"messageId":"190","fix":"204","desc":"192"},{"messageId":"193","fix":"205","desc":"195"},{"messageId":"190","fix":"206","desc":"192"},{"messageId":"193","fix":"207","desc":"195"},"suggestUnknown",{"range":"208","text":"209"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"208","text":"210"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"211","text":"209"},{"range":"211","text":"210"},{"range":"212","text":"209"},{"range":"212","text":"210"},{"range":"213","text":"209"},{"range":"213","text":"210"},{"range":"214","text":"209"},{"range":"214","text":"210"},{"range":"215","text":"209"},{"range":"215","text":"210"},{"range":"216","text":"209"},{"range":"216","text":"210"},[235,238],"unknown","never",[155,158],[4642,4645],[7553,7556],[1953,1956],[1098,1101],[1181,1184]]